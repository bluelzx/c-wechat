<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="sys_user">

    <sql id="userColumns">
    	a.id,
    	a.login_name,
    	a.password,
		a.name,
		a.email,
		a.phone,
		a.login_ip,
		a.login_date,
		a.remarks,
		a.useable,
		a.del_flag as del_flags
    </sql>
    
    <!-- 查询用户信息 -->
	<select id="findAllList" resultType="User">
		SELECT
			<include refid="userColumns"/>
		FROM sys_user a
		WHERE a.del_flag = 0
		ORDER BY a.id
	</select>
    
    <!-- 查询用户信息 -->
	<select id="findList" resultType="User">
		SELECT
			<include refid="userColumns"/>
		FROM sys_user a
		WHERE a.del_flag = 0
		<if test="loginName != null and loginName != ''">
			AND a.login_name =  #{loginName}
		</if>
		<if test="name != null and name != ''">
			AND a.name = #{name}
		</if>
		ORDER BY a.id
	</select>
	
	<!-- 根据登录名查询用户 -->
	<select id="getByLoginName" resultType="User">
		SELECT
			<include refid="userColumns"/>
		FROM sys_user a
		WHERE a.login_name = #{loginName} AND a.del_flag = 0
	</select>
    
	<!-- 根据编号获得用户 -->
	<select id="getByPrimaryKey" resultType="User">
		SELECT
			<include refid="userColumns"/>
		FROM sys_user a
		WHERE a.id = #{id}
	</select>
	
	<!-- 插入用户 -->
	<insert id="insert">
		INSERT INTO sys_user(
			id, 
			login_name, 
			password, 
			name, 
			email, 
			phone, 
			remarks, 
			useable, 
			del_flag
		) VALUES (
			#{id}, 
			#{loginName}, 
			#{password}, 
			#{name}, 
			#{email}, 
			#{phone}, 
			#{remarks}, 
			#{useable}, 
			#{delFlag}
		)
	</insert>
	
	<!-- 更新用户 -->
	<update id="update">
		UPDATE sys_user
		<set>
			<if test="loginName != null and loginName != ''">
				login_name = #{loginName}, 
			</if>
			<if test="password != null and password != ''">
				password = #{password}, 
			</if>
			<if test="name != null and name != ''">
				name = #{name}, 
			</if>
			<if test="email != null and email != ''">
				email = #{email}, 
			</if>
			<if test="phone != null and phone != ''">
				phone = #{phone}, 
			</if>
			<if test="remarks != null and remarks != ''">
				remarks = #{remarks}, 
			</if>
			<if test="useable != null">
				useable = #{useable}, 
			</if>
		</set>
		WHERE id = #{id}
	</update>
	
	<!-- 删除用户和角色关联表数据 -->
	<delete id="deleteUserRole">
		DELETE FROM sys_user_role WHERE user_id = #{userId}
	</delete>
	
	<!-- 插入用户和角色关联表数据 -->
	<insert id="insertUserRole">
		INSERT INTO sys_user_role(user_id, role_id)
		<foreach collection="roleList" item="role" separator=" union all ">
			SELECT #{id}, #{role.id}
		</foreach>
	</insert>
	
	<!-- 更新用户信息  -->
	<update id="updateUserInfo">
		UPDATE sys_user SET 
			email = #{email}, 
			phone = #{phone}, 
			remarks = #{remarks}
		WHERE id = #{id}
	</update>
	
	<!-- 更新用户密码 -->
	<update id="updatePasswordById">
		UPDATE sys_user SET 
			password = #{password} 
		WHERE id = #{id}
	</update>
	
	<!-- 更新登录信息，如登录IP、登录时间 -->
	<update id="updateLoginInfo">
		UPDATE sys_user SET 
			login_ip = #{loginIp}, 
			login_Date = #{loginDate} 
		WHERE id = #{id}
	</update>
	
	<!-- 逻辑删除用户 -->
	<update id="delete">
		UPDATE sys_user SET 
			del_flag = 1
		WHERE id = #{id}
	</update>
	
	<!-- 更新是否可用 -->
	<update id="updateUseable">
		UPDATE sys_user SET 
			useable = #{useable}
		WHERE id = #{id}
	</update>
</mapper>